{"version":3,"sources":["node_modules/browser-pack/_prelude.js","source/js/burger-menu.js","source/js/main.js"],"names":[],"mappings":"AAAA;;;;;;;ACAA,IAAM,qBAAqB,GAAG,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC;AACrE,IAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC;AAC1D,IAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,iBAAiB,CAAC;AAC9D,IAAI,YAAY,GAAG,KAAK;AAExB,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAA,EAAS;EAC1B,IAAI,qBAAqB,CAAC,OAAO,EAAE;IACjC,YAAY,GAAG,CAAC,YAAY;IAE5B,IAAI,YAAY,EAAE;MAChB,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;MAChC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ;MAExC;IACF;IAEA,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ;IACxC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;EACrC;AACF,CAAC;AAEM,IAAM,QAAQ,GAAA,OAAA,CAAA,QAAA,GAAG,SAAX,QAAQ,CAAA,EAAS;EAC5B,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC;AACvD,CAAC;;;;;ACvBD,IAAA,WAAA,GAAA,OAAA;AACA,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;EAEhD;EACA;;EAEA;EACA;EACA,IAAA,oBAAQ,EAAC,CAAC;EACV;EACA;EACA,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,YAAM,CAEtC,CAAC,CAAC;AACJ,CAAC,CAAC","file":"main.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const mobileWidthMediaQuery = window.matchMedia('(max-width: 767px)');\nconst headerBody = document.querySelector('.header__body');\nconst headerBurger = document.querySelector('.header__burger');\nlet menuIsOpened = false;\n\nconst checkViewport = () => {\n  if (mobileWidthMediaQuery.matches) {\n    menuIsOpened = !menuIsOpened;\n\n    if (menuIsOpened) {\n      headerBody.classList.add('open');\n      document.body.style.overflowY = 'hidden';\n\n      return;\n    }\n\n    document.body.style.overflowY = 'scroll';\n    headerBody.classList.remove('open');\n  }\n};\n\nexport const initMenu = () => {\n  headerBurger.addEventListener('click', checkViewport);\n};\n","import {initMenu} from './burger-menu';\nwindow.addEventListener('DOMContentLoaded', () => {\n\n  // Utils\n  // ---------------------------------\n\n  // Modules\n  // ---------------------------------\n  initMenu();\n  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'\n  // в load следует добавить скрипты, не участвующие в работе первого экрана\n  window.addEventListener('load', () => {\n\n  });\n});\n"]}